{"version":3,"sources":["node_modules/monaco-editor/esm/vs/language/json/workerManager.js","node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js","node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js","node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/format.js","node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js","node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/edit.js","node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js","node_modules/monaco-editor/esm/vs/language/json/tokenization.js","node_modules/monaco-editor/esm/vs/language/json/jsonMode.js"],"names":["STOP_WHEN_IDLE_FOR","WorkerManager","defaults","_this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","monaco","editor","createWebWorker","moduleId","label","languageId","createData","languageSettings","diagnosticsOptions","enableSchemaRequest","getProxy","getLanguageServiceWorker","resources","_i","arguments","length","then","client","_","withSyncedResources","Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","create","line","character","is","value","candidate","Is","objectLiteral","number","one","two","three","four","start","end","Error","uri","range","defined","string","undefined","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","color","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","result","location","message","Warning","Information","Hint","severity","code","source","relatedInformation","title","command","args","replace","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","options","overwrite","ignoreIfExists","boolean","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","every","change","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolInformation","TextEditChangeImpl","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","Object","_workspaceEdit","forEach","textEditChange","keys","key","defineProperty","get","enumerable","configurable","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","deleteFile","version","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","String","Number","Boolean","Key","Null","name","containerName","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","detail","selectionRange","children","deprecated","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","diagnostics","only","commandOrEdit","data","tabSize","insertSpaces","DocumentLink","target","TextDocument","TextDocumentSaveReason","EOL","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","p","left","slice","right","leftIdx","rightIdx","i","ret","a","b","diff","lastModifiedOffset","e","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","Uri","DiagnosticsAdapter","_disposables","_listener","onModelAdd","model","modeId","handle","getModeId","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","getModels","d","resource","worker","resetSchema","doValidation","markers","map","toDiagnostics","getModel","err","console","error","toSeverity","lsSeverity","ls","MarkerSeverity","Info","diag","startLineNumber","startColumn","endLineNumber","endColumn","fromPosition","column","lineNumber","fromRange","toRange","toCompletionItemKind","mItemKind","languages","fromCompletionItemKind","toTextEdit","CompletionAdapter","provideCompletionItems","context","token","doComplete","info","wordInfo","getWordUntilPosition","wordRange","entry","item","insertText","sortText","filterText","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","suggestions","isMarkupContent","thing","toMarkdownString","toMarkedStringArray","HoverAdapter","provideHover","doHover","toLocation","parse","toSymbolKind","mKind","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","fromFormattingOptions","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","provideColorPresentations","getColorPresentations","presentations","presentation","FoldingRangeAdapter","provideFoldingRanges","ranges","toFoldingRangeKind","Comment","Imports","Region","createScanner","ignoreTrivia","pos","len","tokenOffset","scanError","scanHexDigits","count","exact","digits","charCodeAt","scanNext","isWhiteSpace","fromCharCode","isLineBreak","scanString","ch_1","safeLength","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","scanNextNonTrivia","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","documentText","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","isEOL","computeIndentLevel","eol","indentValue","getEOL","lineBreak","indentLevel","repeat","scanner","hasError","newLineAndIndent","editOperations","addEdit","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","s","nChars","indexOf","ParseOptions","getLocation","segments","earlyReturnException","previousNode","previousNodeInst","type","parent","isAtPropertyKey","setPreviousNode","colonOffset","visit","onObjectBegin","onObjectProperty","onObjectEnd","pop","onArrayBegin","onArrayEnd","onLiteralValue","getLiteralNodeType","onSeparator","sep","last","path","matches","pattern","k","errors","DEFAULT","currentProperty","currentParent","previousParents","onValue","object","array","onError","parseTree","ensurePropertyComplete","valueNode","findNodeAtLocation","root","node","path_1","segment","found","_a","_b","propertyNode","index","getNodePath","getNodeValue","obj","prop","contains","includeRightBound","findNodeAtOffset","visitor","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","arg","onComment","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","parseArray","needsComma","parseObject","parseLiteral","JSON","stripComments","replaceCh","parts","join","removeProperty","formattingOptions","setProperty","originalPath","getInsertionIndex","lastSegment","existing","propertyIndex","removeBegin","removeEnd","previous","withFormatting","stringify","newProperty","insertIndex","removalIndex","toRemove","applyEdit","begin","edit_1","isWS","parser","printParseErrorCode","formatter","modify","createTokenizationSupport","supportComments","getInitialState","JSONState","tokenize","state","offsetDelta","stopAtOffset","TOKEN_DELIM_OBJECT","TOKEN_DELIM_ARRAY","TOKEN_DELIM_COLON","TOKEN_DELIM_COMMA","TOKEN_VALUE_BOOLEAN","TOKEN_VALUE_NULL","TOKEN_VALUE_STRING","TOKEN_VALUE_NUMBER","TOKEN_PROPERTY_NAME","TOKEN_COMMENT_BLOCK","TOKEN_COMMENT_LINE","lastWasColon","_state","clone","equals","other","getStateData","setStateData","comments","numberOfInsertedCharacters","adjustOffset","json","tokens","endState","substr","startIndex","scopes","setupMode","disposables","uris","apply","registerCompletionItemProvider","languageFeatures","registerHoverProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","setTokensProvider","setLanguageConfiguration","richEditConfiguration","registerColorProvider","registerFoldingRangeProvider","wordPattern","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn"],"mappings":"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","file":"jsonMode.de5ef453.js","sourceRoot":"..\\..\\client","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `JSONWorker` instance\n                moduleId: 'vs/language/json/jsonWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId,\n                    enableSchemaRequest: this._defaults.diagnosticsOptions.enableSchemaRequest\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; });\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n            _this._resetSchema(model.uri);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n            _this._resetSchema(event.model.uri);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                monaco.editor.getModels().forEach(onModelRemoved);\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._resetSchema = function (resource) {\n        this._worker().then(function (worker) {\n            worker.resetSchema(resource.toString());\n        });\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                var model = monaco.editor.getModel(resource);\n                if (model && model.getModeId() === languageId) {\n                    monaco.editor.setModelMarkers(model, languageId, markers);\n                }\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var wordInfo = model.getWordUntilPosition(position);\n            var wordRange = new Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText || entry.label,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    range: wordRange,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.additionalTextEdits) {\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                suggestions: items\n            };\n        });\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        });\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                detail: '',\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                range: toRange(item.location.range),\n                selectionRange: toRange(item.location.range)\n            }); });\n        });\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        });\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        });\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        });\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        });\n    };\n    return DocumentColorAdapter;\n}());\nexport { DocumentColorAdapter };\nvar FoldingRangeAdapter = /** @class */ (function () {\n    function FoldingRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n        var resource = model.uri;\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\n            if (!ranges) {\n                return;\n            }\n            return ranges.map(function (range) {\n                var result = {\n                    start: range.startLine + 1,\n                    end: range.endLine + 1\n                };\n                if (typeof range.kind !== 'undefined') {\n                    result.kind = toFoldingRangeKind(range.kind);\n                }\n                return result;\n            });\n        });\n    };\n    return FoldingRangeAdapter;\n}());\nexport { FoldingRangeAdapter };\nfunction toFoldingRangeKind(kind) {\n    switch (kind) {\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\n    }\n    return void 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var safeLength = len - 1; // For lookahead.\n                    var commentClosed = false;\n                    while (pos < safeLength) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n            case 47 /* slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenError: function () { return scanError; }\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\nexport function format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = createScanner(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== 17 /* EOF */) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* EOF */) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* CloseBraceToken */) {\n            if (firstToken !== 1 /* OpenBraceToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 /* CloseBracketToken */) {\n            if (firstToken !== 3 /* OpenBracketToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* OpenBracketToken */:\n                case 1 /* OpenBraceToken */:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 /* CommaToken */:\n                case 12 /* LineCommentTrivia */:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* ColonToken */:\n                    replaceContent = ' ';\n                    break;\n                case 10 /* StringLiteral */:\n                    if (secondToken === 6 /* ColonToken */) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case 7 /* NullKeyword */:\n                case 8 /* TrueKeyword */:\n                case 9 /* FalseKeyword */:\n                case 11 /* NumericLiteral */:\n                case 2 /* CloseBraceToken */:\n                case 4 /* CloseBracketToken */:\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\nvar ParseOptions;\n(function (ParseOptions) {\n    ParseOptions.DEFAULT = {\n        allowTrailingComma: false\n    };\n})(ParseOptions || (ParseOptions = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = void 0;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: void 0\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = void 0;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getLiteralNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = void 0;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = void 0;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: void 0 }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getLiteralNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return void 0;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return void 0;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return void 0;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return void 0;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    var path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        var key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        var index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            var obj = Object.create(null);\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var prop = _a[_i];\n                var valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return void 0;\n    }\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    if (contains(node, offset, includeRightBound)) {\n        var children = node.children;\n        if (Array.isArray(children)) {\n            for (var i = 0; i < children.length && children[i].offset <= offset; i++) {\n                var item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return void 0;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        return true;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== void 0) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nfunction getLiteralNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        default: return 'null';\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { format, isEOL } from './format.js';\nimport { parseTree, findNodeAtLocation } from './parser.js';\nexport function removeProperty(text, path, formattingOptions) {\n    return setProperty(text, path, void 0, formattingOptions);\n}\nexport function setProperty(text, originalPath, value, formattingOptions, getInsertionIndex) {\n    var _a;\n    var path = originalPath.slice();\n    var errors = [];\n    var root = parseTree(text, errors);\n    var parent = void 0;\n    var lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = (_a = {}, _a[lastSegment] = value, _a);\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) { // delete\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        var existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) { // delete\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                var propertyIndex = parent.children.indexOf(existing.parent);\n                var removeBegin = void 0;\n                var removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    var previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        var next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n            }\n        }\n        else {\n            if (value === void 0) { // delete\n                return []; // property does not exist, nothing to do\n            }\n            var newProperty = JSON.stringify(lastSegment) + \": \" + JSON.stringify(value);\n            var index = getInsertionIndex ? getInsertionIndex(parent.children.map(function (p) { return p.children[0].value; })) : parent.children.length;\n            var edit = void 0;\n            if (index > 0) {\n                var previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        var insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            var newProperty = \"\" + JSON.stringify(value);\n            var edit = void 0;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                var previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n        else {\n            if (value === void 0 && parent.children.length >= 0) {\n                //Removal\n                var removalIndex = lastSegment;\n                var toRemove = parent.children[removalIndex];\n                var edit = void 0;\n                if (parent.children.length === 1) {\n                    // only item\n                    edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n                }\n                else if (parent.children.length - 1 === removalIndex) {\n                    // last item\n                    var previous = parent.children[removalIndex - 1];\n                    var offset = previous.offset + previous.length;\n                    var parentEndOffset = parent.offset + parent.length;\n                    edit = { offset: offset, length: parentEndOffset - 2 - offset, content: '' };\n                }\n                else {\n                    edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n                }\n                return withFormatting(text, edit, formattingOptions);\n            }\n            else {\n                throw new Error('Array modification not supported yet');\n            }\n        }\n    }\n    else {\n        throw new Error(\"Can not add \" + (typeof lastSegment !== 'number' ? 'index' : 'property') + \" to parent of type \" + parent.type);\n    }\n}\nfunction withFormatting(text, edit, formattingOptions) {\n    // apply the edit\n    var newText = applyEdit(text, edit);\n    // format the new text\n    var begin = edit.offset;\n    var end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) { // insert or remove\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    var edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (var i = edits.length - 1; i >= 0; i--) {\n        var edit_1 = edits[i];\n        newText = applyEdit(newText, edit_1);\n        begin = Math.min(begin, edit_1.offset);\n        end = Math.max(end, edit_1.offset + edit_1.length);\n        end += edit_1.content.length - edit_1.length;\n    }\n    // create a single edit with all changes\n    var editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nexport function applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nexport function isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format.js';\nimport * as edit from './impl/edit.js';\nimport * as scanner from './impl/scanner.js';\nimport * as parser from './impl/parser.js';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport var findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport var getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\nexport function printParseErrorCode(code) {\n    switch (code) {\n        case 1 /* InvalidSymbol */: return 'InvalidSymbol';\n        case 2 /* InvalidNumberFormat */: return 'InvalidNumberFormat';\n        case 3 /* PropertyNameExpected */: return 'PropertyNameExpected';\n        case 4 /* ValueExpected */: return 'ValueExpected';\n        case 5 /* ColonExpected */: return 'ColonExpected';\n        case 6 /* CommaExpected */: return 'CommaExpected';\n        case 7 /* CloseBraceExpected */: return 'CloseBraceExpected';\n        case 8 /* CloseBracketExpected */: return 'CloseBracketExpected';\n        case 9 /* EndOfFileExpected */: return 'EndOfFileExpected';\n        case 10 /* InvalidCommentToken */: return 'InvalidCommentToken';\n        case 11 /* UnexpectedEndOfComment */: return 'UnexpectedEndOfComment';\n        case 12 /* UnexpectedEndOfString */: return 'UnexpectedEndOfString';\n        case 13 /* UnexpectedEndOfNumber */: return 'UnexpectedEndOfNumber';\n        case 14 /* InvalidUnicode */: return 'InvalidUnicode';\n        case 15 /* InvalidEscapeCharacter */: return 'InvalidEscapeCharacter';\n        case 16 /* InvalidCharacter */: return 'InvalidCharacter';\n    }\n    return '<unknown ParseErrorCode>';\n}\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as json from './_deps/jsonc-parser/main.js';\nexport function createTokenizationSupport(supportComments) {\n    return {\n        getInitialState: function () { return new JSONState(null, null, false); },\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\n    };\n}\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\nexport var TOKEN_VALUE_NULL = 'keyword.json';\nexport var TOKEN_VALUE_STRING = 'string.value.json';\nexport var TOKEN_VALUE_NUMBER = 'number.json';\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\nvar JSONState = /** @class */ (function () {\n    function JSONState(state, scanError, lastWasColon) {\n        this._state = state;\n        this.scanError = scanError;\n        this.lastWasColon = lastWasColon;\n    }\n    JSONState.prototype.clone = function () {\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\n    };\n    JSONState.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof JSONState)) {\n            return false;\n        }\n        return this.scanError === other.scanError &&\n            this.lastWasColon === other.lastWasColon;\n    };\n    JSONState.prototype.getStateData = function () {\n        return this._state;\n    };\n    JSONState.prototype.setStateData = function (state) {\n        this._state = state;\n    };\n    return JSONState;\n}());\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n    if (offsetDelta === void 0) { offsetDelta = 0; }\n    // handle multiline strings and block comments\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\n    switch (state.scanError) {\n        case 2 /* UnexpectedEndOfString */:\n            line = '\"' + line;\n            numberOfInsertedCharacters = 1;\n            break;\n        case 1 /* UnexpectedEndOfComment */:\n            line = '/*' + line;\n            numberOfInsertedCharacters = 2;\n            break;\n    }\n    var scanner = json.createScanner(line), kind, ret, lastWasColon = state.lastWasColon;\n    ret = {\n        tokens: [],\n        endState: state.clone()\n    };\n    while (true) {\n        var offset = offsetDelta + scanner.getPosition(), type = '';\n        kind = scanner.scan();\n        if (kind === 17 /* EOF */) {\n            break;\n        }\n        // Check that the scanner has advanced\n        if (offset === offsetDelta + scanner.getPosition()) {\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n        }\n        // In case we inserted /* or \" character, we need to\n        // adjust the offset of all tokens (except the first)\n        if (adjustOffset) {\n            offset -= numberOfInsertedCharacters;\n        }\n        adjustOffset = numberOfInsertedCharacters > 0;\n        // brackets and type\n        switch (kind) {\n            case 1 /* OpenBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 2 /* CloseBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 3 /* OpenBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 4 /* CloseBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 6 /* ColonToken */:\n                type = TOKEN_DELIM_COLON;\n                lastWasColon = true;\n                break;\n            case 5 /* CommaToken */:\n                type = TOKEN_DELIM_COMMA;\n                lastWasColon = false;\n                break;\n            case 8 /* TrueKeyword */:\n            case 9 /* FalseKeyword */:\n                type = TOKEN_VALUE_BOOLEAN;\n                lastWasColon = false;\n                break;\n            case 7 /* NullKeyword */:\n                type = TOKEN_VALUE_NULL;\n                lastWasColon = false;\n                break;\n            case 10 /* StringLiteral */:\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n                lastWasColon = false;\n                break;\n            case 11 /* NumericLiteral */:\n                type = TOKEN_VALUE_NUMBER;\n                lastWasColon = false;\n                break;\n        }\n        // comments, iff enabled\n        if (comments) {\n            switch (kind) {\n                case 12 /* LineCommentTrivia */:\n                    type = TOKEN_COMMENT_LINE;\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    type = TOKEN_COMMENT_BLOCK;\n                    break;\n            }\n        }\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n        ret.tokens.push({\n            startIndex: offset,\n            scopes: type\n        });\n    }\n    return ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nimport { createTokenizationSupport } from './tokenization.js';\nexport function setupMode(defaults) {\n    var disposables = [];\n    var client = new WorkerManager(defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\n    disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\n    disposables.push(new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults));\n    disposables.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\n    disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\n    disposables.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\n    disposables.push(monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker)));\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ]\n};\n"]}