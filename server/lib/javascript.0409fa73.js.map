{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/javascript/javascript.js"],"names":["_monaco","monaco","self","conf","tsConf","language","defaultToken","tokenPostfix","keywords","typeKeywords","operators","tsLanguage","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","regexpctl","regexpesc","tokenizer"],"mappings":";AAIA,aAKO,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,QAAA,UAAA,EAJP,IAAA,EAAA,QAAA,+BAEIA,EAA6B,oBAAXC,OAAyBC,KAAKD,OAASA,OAClDE,EAAOC,EAAX,KACA,QAAA,KAAA,EAAA,IAAIC,EAAW,CAElBC,aAAc,UACdC,aAAc,MACdC,SAAU,CACN,QAAS,OAAQ,QAAS,QAAS,WAAY,QAC/C,cAAe,WAAY,UAAW,SAAU,KAAM,OACtD,SAAU,UAAW,QAAS,UAAW,MAAO,OAAQ,WACxD,MAAO,KAAM,SAAU,KAAM,aAAc,MAAO,MAAO,OACzD,SAAU,MAAO,QAAS,SAAU,SAAU,OAAQ,QAAS,OAC/D,MAAO,SAAU,YAAa,MAAO,OAAQ,QAAS,OAAQ,QAC9D,QAAS,QAAS,MAEtBC,aAAc,GACdC,UAAWC,EAAWD,SAAAA,UACtBE,QAASD,EAAWC,SAAAA,QACpBC,QAASF,EAAWE,SAAAA,QACpBC,OAAQH,EAAWG,SAAAA,OACnBC,YAAaJ,EAAWI,SAAAA,YACxBC,aAAcL,EAAWK,SAAAA,aACzBC,UAAWN,EAAWM,SAAAA,UACtBC,UAAWP,EAAWO,SAAAA,UACtBC,UAAWR,EAAWQ,SAAAA,UACtBC,UAAWT,EAAWS,SAAAA,WAvBnB,QAAA,SAAA","file":"javascript.0409fa73.js","sourceRoot":"..\\..\\client","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { conf as tsConf, language as tsLanguage } from '../typescript/typescript.js';\r\n// Allow for running under nodejs/requirejs in tests\r\nvar _monaco = (typeof monaco === 'undefined' ? self.monaco : monaco);\r\nexport var conf = tsConf;\r\nexport var language = {\r\n    // Set defaultToken to invalid to see what you do not tokenize yet\r\n    defaultToken: 'invalid',\r\n    tokenPostfix: '.js',\r\n    keywords: [\r\n        'break', 'case', 'catch', 'class', 'continue', 'const',\r\n        'constructor', 'debugger', 'default', 'delete', 'do', 'else',\r\n        'export', 'extends', 'false', 'finally', 'for', 'from', 'function',\r\n        'get', 'if', 'import', 'in', 'instanceof', 'let', 'new', 'null',\r\n        'return', 'set', 'super', 'switch', 'symbol', 'this', 'throw', 'true',\r\n        'try', 'typeof', 'undefined', 'var', 'void', 'while', 'with', 'yield',\r\n        'async', 'await', 'of'\r\n    ],\r\n    typeKeywords: [],\r\n    operators: tsLanguage.operators,\r\n    symbols: tsLanguage.symbols,\r\n    escapes: tsLanguage.escapes,\r\n    digits: tsLanguage.digits,\r\n    octaldigits: tsLanguage.octaldigits,\r\n    binarydigits: tsLanguage.binarydigits,\r\n    hexdigits: tsLanguage.hexdigits,\r\n    regexpctl: tsLanguage.regexpctl,\r\n    regexpesc: tsLanguage.regexpesc,\r\n    tokenizer: tsLanguage.tokenizer,\r\n};\r\n"]}