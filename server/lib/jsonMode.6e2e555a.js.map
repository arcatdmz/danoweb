{"version":3,"sources":["node_modules/monaco-editor/esm/vs/language/json/workerManager.js","node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js","node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js","node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/format.js","node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js","node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/edit.js","node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js","node_modules/monaco-editor/esm/vs/language/json/tokenization.js","node_modules/monaco-editor/esm/vs/language/json/jsonMode.js"],"names":["Promise","monaco","STOP_WHEN_IDLE_FOR","WorkerManager","defaults","_this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","label","languageId","createData","languageSettings","diagnosticsOptions","getProxy","getLanguageServiceWorker","resources","_i","arguments","length","toShallowCancelPromise","then","client","_","withSyncedResources","p","completeCallback","errorCallback","r","c","e","Position","Range","Location","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","WorkspaceEdit","create","line","character","is","value","candidate","Is","objectLiteral","number","one","two","three","four","start","end","Error","uri","range","defined","string","undefined","red","green","blue","alpha","color","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","result","location","message","Warning","Information","Hint","severity","code","source","relatedInformation","title","command","args","replace","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","changes","documentChanges","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolInformation","TextEditChangeImpl","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","Object","_workspaceEdit","forEach","textDocumentEdit","textEditChange","keys","key","defineProperty","get","enumerable","configurable","getTextEditChange","version","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","String","Number","Boolean","Key","Null","name","containerName","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","detail","selectionRange","children","deprecated","boolean","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","diagnostics","only","commandOrEdit","data","tabSize","insertSpaces","DocumentLink","target","TextDocument","TextDocumentSaveReason","EOL","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","left","slice","right","leftIdx","rightIdx","i","ret","a","b","diff","lastModifiedOffset","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","every","Uri","DiagnosticsAdapter","_disposables","_listener","onModelAdd","model","modeId","handle","getModeId","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","getModels","d","resource","worker","resetSchema","doValidation","markers","map","toDiagnostics","getModel","err","console","error","toSeverity","lsSeverity","ls","MarkerSeverity","Info","diag","startLineNumber","startColumn","endLineNumber","endColumn","fromPosition","column","lineNumber","fromRange","toRange","toCompletionItemKind","mItemKind","languages","fromCompletionItemKind","toTextEdit","toCompletionItem","entry","insertText","sortText","filterText","fromMarkdownString","fromCompletionItem","item","insertTextFormat","CompletionAdapter","provideCompletionItems","token","getWordUntilPosition","wordInfo","wireCancellationToken","doComplete","info","isMarkupContent","thing","toMarkdownString","toMarkedStringArray","HoverAdapter","provideHover","doHover","toLocation","parse","toSymbolKind","mKind","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","fromFormattingOptions","options","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","provideColorPresentations","getColorPresentations","presentations","presentation","FoldingRangeAdapter","provideFoldingRanges","context","ranges","toFoldingRangeKind","Comment","Imports","Region","promise","cancel","onCancellationRequested","createScanner","ignoreTrivia","pos","len","tokenOffset","scanError","scanHexDigits","count","exact","digits","charCodeAt","scanNext","isWhiteSpace","fromCharCode","isLineBreak","scanString","ch_1","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","scanNextNonTrivia","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","documentText","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","isEOL","computeIndentLevel","eol","indentValue","getEOL","lineBreak","indentLevel","repeat","scanner","hasError","newLineAndIndent","editOperations","addEdit","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","s","nChars","indexOf","getLocation","segments","earlyReturnException","previousNode","previousNodeInst","type","parent","isAtPropertyKey","setPreviousNode","colonOffset","visit","onObjectBegin","onObjectProperty","onObjectEnd","pop","onArrayBegin","onArrayEnd","onLiteralValue","getLiteralNodeType","onSeparator","sep","last","path","matches","pattern","k","errors","currentProperty","currentParent","previousParents","onValue","object","array","onError","parseTree","ensurePropertyComplete","valueNode","findNodeAtLocation","root","node","path_1","segment","found","_a","_b","propertyNode","index","getNodePath","getNodeValue","obj","prop","contains","includeRightBound","findNodeAtOffset","visitor","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","arg","onComment","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","parseArray","needsComma","parseObject","parseLiteral","JSON","stripComments","replaceCh","parts","join","removeProperty","formattingOptions","setProperty","getInsertionIndex","lastSegment","existing","propertyIndex","removeBegin","removeEnd","previous","withFormatting","stringify","newProperty","insertIndex","removalIndex","toRemove","applyEdit","begin","edit_1","isWS","parser","formatter","modify","createTokenizationSupport","supportComments","getInitialState","JSONState","tokenize","state","offsetDelta","stopAtOffset","TOKEN_DELIM_OBJECT","TOKEN_DELIM_ARRAY","TOKEN_DELIM_COLON","TOKEN_DELIM_COMMA","TOKEN_VALUE_BOOLEAN","TOKEN_VALUE_NULL","TOKEN_VALUE_STRING","TOKEN_VALUE_NUMBER","TOKEN_PROPERTY_NAME","TOKEN_COMMENT_BLOCK","TOKEN_COMMENT_LINE","lastWasColon","_state","clone","equals","other","getStateData","setStateData","comments","numberOfInsertedCharacters","adjustOffset","json","tokens","endState","substr","startIndex","scopes","setupMode","disposables","uris","apply","registerCompletionItemProvider","languageFeatures","registerHoverProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","setTokensProvider","setLanguageConfiguration","richEditConfiguration","registerColorProvider","registerFoldingRangeProvider","wordPattern","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn"],"mappings":"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","file":"jsonMode.6e2e555a.js","sourceRoot":"..\\..\\client","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `JSONWorker` instance\n                moduleId: 'vs/language/json/jsonWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\r\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\r\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for versioned document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.string(candidate.detail) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Ovelapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n            _this._resetSchema(model.uri);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n            _this._resetSchema(event.model.uri);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                monaco.editor.getModels().forEach(onModelRemoved);\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._resetSchema = function (resource) {\n        this._worker().then(function (worker) {\n            worker.resetSchema(resource.toString());\n        });\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                var model = monaco.editor.getModel(resource);\n                if (model.getModeId() === languageId) {\n                    monaco.editor.setModelMarkers(model, languageId, markers);\n                }\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        }));\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                detail: '',\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                range: toRange(item.location.range),\n                selectionRange: toRange(item.location.range)\n            }); });\n        }));\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        }));\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        }));\n    };\n    return DocumentColorAdapter;\n}());\nexport { DocumentColorAdapter };\nvar FoldingRangeAdapter = /** @class */ (function () {\n    function FoldingRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\n            if (!ranges) {\n                return;\n            }\n            return ranges.map(function (range) {\n                var result = {\n                    start: range.startLine + 1,\n                    end: range.endLine + 1\n                };\n                if (typeof range.kind !== 'undefined') {\n                    result.kind = toFoldingRangeKind(range.kind);\n                }\n                return result;\n            });\n        }));\n    };\n    return FoldingRangeAdapter;\n}());\nexport { FoldingRangeAdapter };\nfunction toFoldingRangeKind(kind) {\n    switch (kind) {\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\n    }\n    return void 0;\n}\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var commentClosed = false;\n                    while (pos < len) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && (pos + 1 < len) && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n            case 47 /* slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenError: function () { return scanError; }\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\nexport function format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = createScanner(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== 17 /* EOF */) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* EOF */) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* CloseBraceToken */) {\n            if (firstToken !== 1 /* OpenBraceToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 /* CloseBracketToken */) {\n            if (firstToken !== 3 /* OpenBracketToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* OpenBracketToken */:\n                case 1 /* OpenBraceToken */:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 /* CommaToken */:\n                case 12 /* LineCommentTrivia */:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* ColonToken */:\n                    replaceContent = ' ';\n                    break;\n                case 10 /* StringLiteral */:\n                    if (secondToken === 6 /* ColonToken */) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case 7 /* NullKeyword */:\n                case 8 /* TrueKeyword */:\n                case 9 /* FalseKeyword */:\n                case 11 /* NumericLiteral */:\n                case 2 /* CloseBraceToken */:\n                case 4 /* CloseBracketToken */:\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = void 0;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: void 0\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = void 0;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getLiteralNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = void 0;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = void 0;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: void 0 }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getLiteralNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return void 0;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return void 0;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return void 0;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return void 0;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    var path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        var key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        var index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            var obj = Object.create(null);\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var prop = _a[_i];\n                var valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return void 0;\n    }\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    if (contains(node, offset, includeRightBound)) {\n        var children = node.children;\n        if (Array.isArray(children)) {\n            for (var i = 0; i < children.length && children[i].offset <= offset; i++) {\n                var item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return void 0;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        return true;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== void 0) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nfunction getLiteralNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        default: return 'null';\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { format, isEOL } from './format.js';\nimport { parseTree, findNodeAtLocation } from './parser.js';\nexport function removeProperty(text, path, formattingOptions) {\n    return setProperty(text, path, void 0, formattingOptions);\n}\nexport function setProperty(text, path, value, formattingOptions, getInsertionIndex) {\n    var errors = [];\n    var root = parseTree(text, errors);\n    var parent = void 0;\n    var lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = (_a = {}, _a[lastSegment] = value, _a);\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) { // delete\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        var existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) { // delete\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                var propertyIndex = parent.children.indexOf(existing.parent);\n                var removeBegin = void 0;\n                var removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    var previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        var next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n            }\n        }\n        else {\n            if (value === void 0) { // delete\n                return []; // property does not exist, nothing to do\n            }\n            var newProperty = JSON.stringify(lastSegment) + \": \" + JSON.stringify(value);\n            var index = getInsertionIndex ? getInsertionIndex(parent.children.map(function (p) { return p.children[0].value; })) : parent.children.length;\n            var edit = void 0;\n            if (index > 0) {\n                var previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        var insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            var newProperty = \"\" + JSON.stringify(value);\n            var edit = void 0;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                var previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n        else {\n            if (value === void 0 && parent.children.length >= 0) {\n                //Removal\n                var removalIndex = lastSegment;\n                var toRemove = parent.children[removalIndex];\n                var edit = void 0;\n                if (parent.children.length === 1) {\n                    // only item\n                    edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n                }\n                else if (parent.children.length - 1 === removalIndex) {\n                    // last item\n                    var previous = parent.children[removalIndex - 1];\n                    var offset = previous.offset + previous.length;\n                    var parentEndOffset = parent.offset + parent.length;\n                    edit = { offset: offset, length: parentEndOffset - 2 - offset, content: '' };\n                }\n                else {\n                    edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n                }\n                return withFormatting(text, edit, formattingOptions);\n            }\n            else {\n                throw new Error('Array modification not supported yet');\n            }\n        }\n    }\n    else {\n        throw new Error(\"Can not add \" + (typeof lastSegment !== 'number' ? 'index' : 'property') + \" to parent of type \" + parent.type);\n    }\n    var _a;\n}\nfunction withFormatting(text, edit, formattingOptions) {\n    // apply the edit\n    var newText = applyEdit(text, edit);\n    // format the new text\n    var begin = edit.offset;\n    var end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) { // insert or remove\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    var edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (var i = edits.length - 1; i >= 0; i--) {\n        var edit_1 = edits[i];\n        newText = applyEdit(newText, edit_1);\n        begin = Math.min(begin, edit_1.offset);\n        end = Math.max(end, edit_1.offset + edit_1.length);\n        end += edit_1.content.length - edit_1.length;\n    }\n    // create a single edit with all changes\n    var editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nexport function applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nexport function isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format.js';\nimport * as edit from './impl/edit.js';\nimport * as scanner from './impl/scanner.js';\nimport * as parser from './impl/parser.js';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport var findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport var getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as json from './_deps/jsonc-parser/main.js';\nexport function createTokenizationSupport(supportComments) {\n    return {\n        getInitialState: function () { return new JSONState(null, null, false); },\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\n    };\n}\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\nexport var TOKEN_VALUE_NULL = 'keyword.json';\nexport var TOKEN_VALUE_STRING = 'string.value.json';\nexport var TOKEN_VALUE_NUMBER = 'number.json';\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\nvar JSONState = /** @class */ (function () {\n    function JSONState(state, scanError, lastWasColon) {\n        this._state = state;\n        this.scanError = scanError;\n        this.lastWasColon = lastWasColon;\n    }\n    JSONState.prototype.clone = function () {\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\n    };\n    JSONState.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof JSONState)) {\n            return false;\n        }\n        return this.scanError === other.scanError &&\n            this.lastWasColon === other.lastWasColon;\n    };\n    JSONState.prototype.getStateData = function () {\n        return this._state;\n    };\n    JSONState.prototype.setStateData = function (state) {\n        this._state = state;\n    };\n    return JSONState;\n}());\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n    if (offsetDelta === void 0) { offsetDelta = 0; }\n    // handle multiline strings and block comments\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\n    switch (state.scanError) {\n        case 2 /* UnexpectedEndOfString */:\n            line = '\"' + line;\n            numberOfInsertedCharacters = 1;\n            break;\n        case 1 /* UnexpectedEndOfComment */:\n            line = '/*' + line;\n            numberOfInsertedCharacters = 2;\n            break;\n    }\n    var scanner = json.createScanner(line), kind, ret, lastWasColon = state.lastWasColon;\n    ret = {\n        tokens: [],\n        endState: state.clone()\n    };\n    while (true) {\n        var offset = offsetDelta + scanner.getPosition(), type = '';\n        kind = scanner.scan();\n        if (kind === 17 /* EOF */) {\n            break;\n        }\n        // Check that the scanner has advanced\n        if (offset === offsetDelta + scanner.getPosition()) {\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n        }\n        // In case we inserted /* or \" character, we need to\n        // adjust the offset of all tokens (except the first)\n        if (adjustOffset) {\n            offset -= numberOfInsertedCharacters;\n        }\n        adjustOffset = numberOfInsertedCharacters > 0;\n        // brackets and type\n        switch (kind) {\n            case 1 /* OpenBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 2 /* CloseBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 3 /* OpenBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 4 /* CloseBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 6 /* ColonToken */:\n                type = TOKEN_DELIM_COLON;\n                lastWasColon = true;\n                break;\n            case 5 /* CommaToken */:\n                type = TOKEN_DELIM_COMMA;\n                lastWasColon = false;\n                break;\n            case 8 /* TrueKeyword */:\n            case 9 /* FalseKeyword */:\n                type = TOKEN_VALUE_BOOLEAN;\n                lastWasColon = false;\n                break;\n            case 7 /* NullKeyword */:\n                type = TOKEN_VALUE_NULL;\n                lastWasColon = false;\n                break;\n            case 10 /* StringLiteral */:\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n                lastWasColon = false;\n                break;\n            case 11 /* NumericLiteral */:\n                type = TOKEN_VALUE_NUMBER;\n                lastWasColon = false;\n                break;\n        }\n        // comments, iff enabled\n        if (comments) {\n            switch (kind) {\n                case 12 /* LineCommentTrivia */:\n                    type = TOKEN_COMMENT_LINE;\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    type = TOKEN_COMMENT_BLOCK;\n                    break;\n            }\n        }\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n        ret.tokens.push({\n            startIndex: offset,\n            scopes: type\n        });\n    }\n    return ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nimport { createTokenizationSupport } from './tokenization.js';\nexport function setupMode(defaults) {\n    var disposables = [];\n    var client = new WorkerManager(defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\n    disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\n    disposables.push(new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults));\n    disposables.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\n    disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\n    disposables.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\n    disposables.push(monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker)));\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ]\n};\n"]}